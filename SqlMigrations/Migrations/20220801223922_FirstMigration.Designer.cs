// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqlMigrations;

#nullable disable

namespace SqlMigrations.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220801223922_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SqlMigrations.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmail");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SqlMigrations.Entities.CourseUserEntity", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.HasKey("CourseId", "UserEmail");

                    b.HasIndex("UserEmail");

                    b.ToTable("CourseUsers");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("GeneralDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("OutputDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProblemSetId")
                        .HasColumnType("int");

                    b.Property<string>("SampleInput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmail");

                    b.HasIndex("ProblemSetId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemSetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorEmail");

                    b.HasIndex("CourseId");

                    b.ToTable("ProblemSets");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ReportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SubmissionStatisticsId")
                        .HasColumnType("int");

                    b.Property<int>("WaReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionStatisticsId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("SqlMigrations.Entities.SolutionEntity", b =>
                {
                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<int>("ProgLanguage")
                        .HasColumnType("int");

                    b.Property<string>("SourceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProblemId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("SqlMigrations.Entities.SubmissionStatisticsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("MemoryTakenInKiloBytes")
                        .HasColumnType("bigint");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("ProgrammingLanguage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("TimeTakenInMilliseconds")
                        .HasColumnType("bigint");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Verdict")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.HasIndex("UserEmail");

                    b.ToTable("SubmissionStatistics");
                });

            modelBuilder.Entity("SqlMigrations.Entities.TestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("SqlMigrations.Entities.UserEntity", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SqlMigrations.Entities.WaReportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActualOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("WaReports");
                });

            modelBuilder.Entity("SqlMigrations.Entities.CourseEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.UserEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SqlMigrations.Entities.CourseUserEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.CourseEntity", "Course")
                        .WithMany("CourseUser")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SqlMigrations.Entities.UserEntity", "User")
                        .WithMany("CourseUser")
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.UserEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SqlMigrations.Entities.ProblemSetEntity", "ProblemSet")
                        .WithMany("Problems")
                        .HasForeignKey("ProblemSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ProblemSet");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemSetEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.UserEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SqlMigrations.Entities.CourseEntity", "Course")
                        .WithMany("ProblemSets")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ReportEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.SubmissionStatisticsEntity", "SubmissionStatistics")
                        .WithMany()
                        .HasForeignKey("SubmissionStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubmissionStatistics");
                });

            modelBuilder.Entity("SqlMigrations.Entities.SolutionEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.ProblemEntity", "Problem")
                        .WithOne("Solution")
                        .HasForeignKey("SqlMigrations.Entities.SolutionEntity", "ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("SqlMigrations.Entities.SubmissionStatisticsEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.ProblemEntity", "Problem")
                        .WithMany()
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SqlMigrations.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Problem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SqlMigrations.Entities.TestEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.ProblemEntity", "Problem")
                        .WithMany("Tests")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("SqlMigrations.Entities.WaReportEntity", b =>
                {
                    b.HasOne("SqlMigrations.Entities.ReportEntity", "Report")
                        .WithOne("WaReport")
                        .HasForeignKey("SqlMigrations.Entities.WaReportEntity", "ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("SqlMigrations.Entities.CourseEntity", b =>
                {
                    b.Navigation("CourseUser");

                    b.Navigation("ProblemSets");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemEntity", b =>
                {
                    b.Navigation("Solution")
                        .IsRequired();

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ProblemSetEntity", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("SqlMigrations.Entities.ReportEntity", b =>
                {
                    b.Navigation("WaReport")
                        .IsRequired();
                });

            modelBuilder.Entity("SqlMigrations.Entities.UserEntity", b =>
                {
                    b.Navigation("CourseUser");
                });
#pragma warning restore 612, 618
        }
    }
}
